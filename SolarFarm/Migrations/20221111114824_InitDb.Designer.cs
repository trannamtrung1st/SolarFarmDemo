// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using SolarFarm.Entities;

#nullable disable

namespace SolarFarm.Migrations
{
    [DbContext(typeof(IotDataContext))]
    [Migration("20221111114824_InitDb")]
    partial class InitDb
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.10")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

            modelBuilder.Entity("SolarFarm.Entities.SolarPanel", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("SolarPanels");

                    b.HasData(
                        new
                        {
                            Id = new Guid("9b32701e-ff66-48be-8da2-4036fabdafa1"),
                            Name = "Solar Panel 1"
                        },
                        new
                        {
                            Id = new Guid("5960384f-3a03-42e5-8269-9bbb165926d6"),
                            Name = "Solar Panel 2"
                        },
                        new
                        {
                            Id = new Guid("0278d12c-7568-4810-98ff-10bfc1359dae"),
                            Name = "Solar Panel 3"
                        },
                        new
                        {
                            Id = new Guid("29179f8a-52b3-48d1-8463-3b9e1ecc185d"),
                            Name = "Solar Panel 4"
                        },
                        new
                        {
                            Id = new Guid("71b016a0-5bab-4f61-bc65-6cf994a5ba23"),
                            Name = "Solar Panel 5"
                        },
                        new
                        {
                            Id = new Guid("e8f6bd56-b8b2-4483-bceb-abc1f54d3b09"),
                            Name = "Solar Panel 6"
                        },
                        new
                        {
                            Id = new Guid("63644c89-bb33-4e2d-9b8e-a7f8c8e54b7c"),
                            Name = "Solar Panel 7"
                        },
                        new
                        {
                            Id = new Guid("39237cbf-fad0-48fe-869f-ff4bb5702744"),
                            Name = "Solar Panel 8"
                        },
                        new
                        {
                            Id = new Guid("15e7f885-8e65-4392-958a-4c94b91eaaee"),
                            Name = "Solar Panel 9"
                        },
                        new
                        {
                            Id = new Guid("78256863-8f4d-436f-a0a9-95e85307953a"),
                            Name = "Solar Panel 10"
                        });
                });

            modelBuilder.Entity("SolarFarm.Entities.SolarPanelData", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("EnergyGeneratedKwh")
                        .HasColumnType("int");

                    b.Property<Guid>("PanelId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("PowerGenerated")
                        .HasColumnType("int");

                    b.Property<DateTimeOffset>("Time")
                        .HasColumnType("datetimeoffset");

                    b.Property<int>("VoltageGenerated")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("PanelId");

                    b.ToTable("SolarPanelData");
                });

            modelBuilder.Entity("SolarFarm.Entities.SolarPanelData", b =>
                {
                    b.HasOne("SolarFarm.Entities.SolarPanel", "SolarPanel")
                        .WithMany("Data")
                        .HasForeignKey("PanelId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("SolarPanel");
                });

            modelBuilder.Entity("SolarFarm.Entities.SolarPanel", b =>
                {
                    b.Navigation("Data");
                });
#pragma warning restore 612, 618
        }
    }
}
